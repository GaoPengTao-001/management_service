<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.management.mapper.OrganizationMapper">
    <!--大区列表-->
    <select id="regionList" resultType="java.util.Map">
      SELECT DISTINCT
            to_char(A .region_id) "regionId",
            A .region_nm "regionNm"
        FROM
            td_dds_fmc A
        ORDER BY
            A .region_nm
    </select>

    <!--小区列表-->
    <select id="fmcList" resultType="java.util.Map">
        SELECT
        to_char(A .fmc_id) "fmcId",
        A .fmc_nm "fmcNm"
        FROM
        td_dds_fmc A
        <if test="'' != query.regionId and null != query.regionId">
            where A.region_id =#{ query.regionId }
        </if>
        ORDER BY
        A .region_nm,
        A .fmc_nm
    </select>

    <!--集团列表，和小区互斥-->
    <select id="groupList" resultType="java.util.Map">
        SELECT DISTINCT
        to_char(t.asc_grp_id) "ascGrpId",
        t.asc_grp_nm "ascGrpNm"
        FROM
          td_dds_asc t
        <if test="'' != query.regionId and null != query.regionId">
            where t.region_id =#{ query.regionId }
        </if>
        ORDER BY
          t.asc_grp_id,
          t.asc_grp_nm
    </select>

    <!--省份列表-->
    <select id="provList" resultType="java.util.Map">
        SELECT distinct
          to_char(a.prov_id) "provId",
          decode(
              a.prov_cn_nm,
              NULL,
              '其它',
              a.prov_cn_nm
            ) "provCnNm"
        FROM
          td_dds_city a
        ORDER BY
          a.prov_id
    </select>

    <!--城市列表-->
    <select id="cityList" resultType="java.util.Map">
        SELECT
        to_char(a.city_id) "cityId",
          a.city_cn_nm "cityCnNm"
        FROM
          td_dds_city a
        <if test="'' != query.provId and null != query.provId">
            where a.prov_id =#{ query.provId }
        </if>
        ORDER BY
          a.city_id
    </select>

    <!--经销商列表-->
    <select id="ascList" resultType="java.util.Map">
        <![CDATA[
            SELECT
                to_char(G .asc_id) "ascId",
                G .asc_cd || '_' || G .asc_nm "ascNm"
            FROM
                TD_DDS_ASC G
            WHERE
                1 = 1
            AND G .asc_st <> 3
       ]]>
        <if test="'' != query.regionId and null != query.regionId">
            AND G .region_id =#{ query.regionId }
        </if>
        <if test="'' != query.fmcId and null != query.fmcId">
            AND G .FMC_ID =#{ query.fmcId }
        </if>
        <if test="'' != query.ascGrpId and null != query.ascGrpId">
            AND G .asc_grp_id =#{ query.ascGrpId }
        </if>
        <if test="'' != query.provId and null != query.provId">
            AND G .prov_id =#{ query.provId }
        </if>
        <if test="'' != query.cityId and null != query.cityId">
            AND G .city_id =#{ query.cityId }
        </if>
        <if test="'' != query.ascCd and null != query.ascCd">
            AND G .ASC_ID =#{ query.ascCd }
        </if>
        ORDER BY
        G .asc_cd
    </select>
    <!--查询kpi-->
    <select id="selectKpiRpt" resultType="com.org.management.entity.KpiRptVo">
        SELECT
        period_cd "periodCd",
        #{query.orgTp} "orgTp",
        org_id "orgId",
        COUNT (kpi_val) "kpiVal",
        COUNT (lp_kpi_val) "lpKpiVal",
        COUNT (ly_kpi_val) "lyKpiVal"
        FROM
        TF_KPI_RPT
        <where>
            <if test="null != query.orgId and '' != query.orgId">
                AND ORG_ID = #{query.orgId}
            </if>
            <if test="null != query.orgIds and query.orgIds.size() > 0">
                AND ORG_ID IN
                <foreach item="item" index="index" collection="query.orgIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="null != query.periodTp and '' != query.periodTp">
                AND period_tp = #{query.periodTp}
            </if>
            <if test="null != query.periodCd and '' != query.periodCd">
                AND period_cd = #{query.periodCd}
            </if>
            <if test="null != query.orgTp and '' != query.orgTp">
                AND org_tp = #{query.orgTp}
            </if>
        </where>
        GROUP BY
        PERIOD_CD,
        ORG_ID
        ORDER BY
        ORG_ID ASC
    </select>
    <select id="selectDDSBaseCustomerChartOverView" resultType="java.util.Map">
        SELECT
          b.calendar_month period_cd,
          CASE
            WHEN SUM (BASE_CSTMR_ONE_YEAR) IS NULL THEN
              0
            ELSE
              SUM (BASE_CSTMR_ONE_YEAR)
            END BASE_CSTMR_ONE_YEAR,
--           一年基盘当前
          CASE
            WHEN SUM (ly_base_cstmr_one_year) IS NULL THEN
              0
            ELSE
              SUM (ly_base_cstmr_one_year)
            END LY_BASE_CSTMR_ONE_YEAR,
          -- 一年基盘同期
          SUM (BASE_CSTMR_FIVE_YEAR) BASE_CSTMR_FIVE_YEAR,
          -- 五年基盘当前
          SUM (ly_base_cstmr_five_year) LY_BASE_CSTMR_FIVE_YEAR,
          -- 五年基盘同期
          CASE
            WHEN SUM (BASE_CSTMR_FIVE_YEAR) = 0 THEN
              NULL
            ELSE
              ROUND (
                    SUM (base_cstmr_five_year_num) / SUM (BASE_CSTMR_FIVE_YEAR),
                    3
                )
            END WASTAGE_RATE,
          --流失率当前
          CASE
            WHEN SUM (ly_base_cstmr_five_year) = 0 THEN
              NULL
            ELSE
                ROUND (
                      SUM (
                          ly_base_cstmr_five_year_num
                        ) / SUM (ly_base_cstmr_five_year),
                      3
                  ) * 100
            END LY_WASTAGE_RATE,
          --流失率同期
          CASE
            WHEN SUM (BASE_CSTMR_ONE_YEAR) = 0 THEN
              NULL
            ELSE
              ROUND (
                    SUM (base_cstmr_one_year_num) / SUM (BASE_CSTMR_ONE_YEAR),
                    3
                )
            END LOYAL_RATE_ONE_YEAR,
          --一年忠诚率当前
          CASE
            WHEN SUM (ly_base_cstmr_one_year) = 0 THEN
              NULL
            ELSE
                ROUND (
                      SUM (ly_base_cstmr_one_year_num) / SUM (ly_base_cstmr_one_year),
                      3
                  ) * 100
            END LY_LOYAL_RATE_ONE_YEAR,
          --一年忠诚率同期
          CASE
            WHEN SUM (brand_loyalty_den) = 0 THEN
              NULL
            ELSE
              ROUND (
                    SUM (brand_loyalty_num) / SUM (brand_loyalty_den),
                    3
                )
            END BRAND_LOYAL_RATE,
          --品牌忠诚率当前
          CASE
            WHEN SUM (ly_brand_loyalty_den) = 0 THEN
              NULL
            ELSE
                ROUND (
                      SUM (ly_brand_loyalty_num) / SUM (ly_brand_loyalty_den),
                      3
                  ) * 100
            END LY_BRAND_LOYAL_RATE --品牌忠诚率同期
        FROM
          (
            SELECT DISTINCT
              calendar_month
            FROM
              td_date
          ) b
            LEFT JOIN TF_BASE_CSTMR_RPT A ON A .period_cd = b.calendar_month
            AND A .period_tp = 'M'
        GROUP BY
          b.calendar_month
        ORDER BY
          b.calendar_month
    </select>
    <select id="selectDDSRetentionRateOverView" resultType="java.util.Map">
        SELECT
            CASE
        WHEN SUM (cstmr_retention_den_50) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (cstmr_retention_NUM_50) / SUM (cstmr_retention_den_50),
                3
            ) * 100
        END cstmr_retention_num_50,
         --客户维持度大于50元消费 当月
        CASE
        WHEN SUM (lp_cstmr_retention_den_50) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_cstmr_retention_num_50) / SUM (lp_cstmr_retention_den_50),
                3
            ) * 100
        END ly_cstmr_retention_num_50,
         --客户维持度大于50元消费 上月
        CASE
        WHEN SUM (cstmr_retention_den_0) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (cstmr_retention_num_0) / SUM (cstmr_retention_den_0),
                3
            ) * 100
        END cstmr_retention_num_0,
         --无消费需求 当月
        CASE
        WHEN SUM (lp_cstmr_retention_den_0) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_cstmr_retention_num_0) / SUM (lp_cstmr_retention_den_0),
                3
            ) * 100
        END ly_cstmr_retention_num_0,
         --无消费需求 上月
        CASE
        WHEN SUM (first_ma_pay_den_7) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (first_ma_pay_num_7) / SUM (first_ma_pay_den_7),
                3
            ) * 100
        END first_ma_pay_num_7,
         --首次付费保养进站率 7个月周期 当月
        CASE
        WHEN SUM (lp_first_ma_pay_den_7) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_first_ma_pay_num_7) / SUM (lp_first_ma_pay_den_7),
                3
            ) * 100
        END ly_first_ma_pay_num_7,
         ----首次付费保养进站率 7个月周期 上月
        CASE
        WHEN SUM (first_ma_pay_den_12) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (first_ma_pay_num_12) / SUM (first_ma_pay_den_12),
                3
            ) * 100
        END first_ma_pay_num_12,
         --首次付费保养进站率 12个月周期 当月
        CASE
        WHEN SUM (lp_first_ma_pay_den_12) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_first_ma_pay_num_12) / SUM (lp_first_ma_pay_den_12),
                3
            ) * 100
        END ly_first_ma_pay_num_12,
         --首次付费保养进站率 12个月周期 上月
        CASE
        WHEN SUM (first_ma_den_7) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (first_ma_num_7) / SUM (first_ma_den_7),
                3
            ) * 100
        END first_ma_num_7,
         --首保进站率 7个月周期 当月
        CASE
        WHEN SUM (lp_first_ma_den_7) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_first_ma_num_7) / SUM (lp_first_ma_den_7),
                3
            ) * 100
        END ly_first_ma_num_7,
         --首保进站率 7个月周期 上月
        CASE
        WHEN SUM (first_ma_den_12) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (first_ma_num_12) / SUM (first_ma_den_12),
                3
            ) * 100
        END first_ma_num_12,
         --首保进站率 12个月周期 当月
        CASE
        WHEN SUM (lp_first_ma_den_12) = 0 THEN
            NULL
        ELSE
            ROUND (
                SUM (lp_first_ma_num_12) / SUM (lp_first_ma_den_12),
                3
            ) * 100
        END ly_first_ma_num_12 --首保进站率 12个月周期 上月
        FROM
            tf_cstmr_retention_rpt A
        WHERE
            A .period_tp = 'M'
    </select>
    <select id="selectLeads" resultType="java.util.Map">
        select
          a.period_cd,
          a.leads_tp,  --leads类型
          sum(a.leads_alloc_qty),--下发数量
          sum(a.leads_follow_qty), --跟进数量
          sum(a.invit_30d_ret_qty ),--30天回站数   回体系
          sum(a.invit_30d_ret_qty)/sum(a.leads_alloc_qty), --30天回站率   回体系
          round(decode(nvl(sum(a.leads_alloc_qty),0),0,0,sum(a.invit_30d_ret_qty)/sum(a.leads_alloc_qty)),3)*100 invit_60d_ret_ratio,
          sum(a.if_30_back_ben_qty),  --30天回站数  回本站
          sum(a.if_30_back_ben_qty)/sum(a.leads_alloc_qty),  --30天回站率  回本站
          round(decode(nvl(sum(a.leads_alloc_qty),0),0,0,sum(a.if_30_back_ben_qty)/sum(a.leads_alloc_qty)),3)*100 invit_60d_ret_ratio,
          sum(a.invit_60d_ret_qty), --60天回站数   回体系
          sum(a.invit_60d_ret_qty)/sum(a.leads_alloc_qty), --60天回站率   回体系
          round(decode(nvl(sum(a.leads_alloc_qty),0),0,0,sum(a.invit_60d_ret_qty)/sum(a.leads_alloc_qty)),3)*100 invit_60d_ret_ratio,
          sum(a.if_60_back_ben_qty),  --60天回站数  回本站
          sum(a.if_60_back_ben_qty)/sum(a.leads_alloc_qty) , --60天回站率  回本站
          round(decode(nvl(sum(a.leads_alloc_qty),0),0,0,sum(a.if_60_back_ben_qty)/sum(a.leads_alloc_qty)),3)*100 invit_60d_ret_ratio
        from tf_leads_follow_rpt a
        WHERE
            a.period_tp='M'
        <if test="null != query.periodCd and '' != query.periodCd">
            AND a.period_cd = #{query.periodCd}
        </if>
        <if test="null != query.leadsType and '' != query.leadsType">
            AND a.leads_tp = #{query.leadsType}
        </if>
        GROUP BY a.PERIOD_CD,a.leads_tp 
    </select>
</mapper>